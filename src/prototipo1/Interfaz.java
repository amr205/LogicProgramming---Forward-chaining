/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipo1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alejandro
 */
public class Interfaz extends javax.swing.JFrame {
    
    ManejadorDeArchivo archivos ;
    MotorDeInferencia motor;
    ArrayList<String> antTemp;
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        archivos= new ManejadorDeArchivo();
        motor = new MotorDeInferencia(archivos);
        antTemp = new ArrayList<>();
        archivos.inicializar();
        
        //Rutina para siempre cerrar archivos al cerrar la aplicación
        Runtime.getRuntime().addShutdownHook(new Thread()
        {
            @Override
            public void run()
            {
                 archivos.cerrar();
            }
        });
        
        mostrarTodos();
        
    }
    private Registro ingresarDatos(){
     

        Registro reg = new Registro();
        boolean bandera = true;
        reg.Consecuente = JOptionPane.showInputDialog("Ingresa el consecuente");
        reg.disponible = true;
        if(reg.Consecuente!=null){
            do{
                String temp = JOptionPane.showInputDialog("Ingresa el siguiente Antecedente \n(Limite 20 antecendetes, de enter para terminar los antecedentes)");
                if(temp ==null){
                    bandera = false;
                }
                else if(temp.isEmpty()){
                    bandera=false;
                }
                else if(temp.length()<=50){
                    reg.Antecedentes.add(temp);
                }
                else{
                    JOptionPane.showMessageDialog(this, "la longitud del antecedente es mayor a 50 caracteres");
                }
            }while(bandera==true&&reg.Antecedentes.size()<=20);
        }
        return reg;
    }
    
    private void mostrarTodos(){
        mostrarRegistros(archivos.leerTodos());
    }
    private void mostrarRegistros(ArrayList<Registro> registros){
        DefaultTableModel model = (DefaultTableModel) tablaReglas.getModel();
        model.setRowCount(0);
        for (int i = 0; i < registros.size(); i++) {
            Object[] rowData = { ""+registros.get(i).llave, registros.get(i).Consecuente, Arrays.toString(registros.get(i).Antecedentes.toArray()) };
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        inferenciaBtn = new javax.swing.JButton();
        resLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nuevosAntBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        antecedentesArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ingresarBtn = new javax.swing.JButton();
        consultarBtn = new javax.swing.JButton();
        actualizarBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        mostrarTodosBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReglas = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Antecedentes");

        inferenciaBtn.setText("Realizar encadenamiento hacia adelante");
        inferenciaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inferenciaBtnActionPerformed(evt);
            }
        });

        resLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Resultado:");

        nuevosAntBtn.setText("Meter antecedentes");
        nuevosAntBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevosAntBtnActionPerformed(evt);
            }
        });

        antecedentesArea.setEditable(false);
        antecedentesArea.setColumns(20);
        antecedentesArea.setRows(5);
        jScrollPane2.setViewportView(antecedentesArea);

        jButton2.setText("Borrar Antecedentes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(nuevosAntBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inferenciaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(111, 111, 111))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inferenciaBtn)
                    .addComponent(nuevosAntBtn)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(resLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Motor de inferencia", jPanel2);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("De clic en los siguientes botones para realizar una acción:");

        ingresarBtn.setText("Ingresar");
        ingresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBtnActionPerformed(evt);
            }
        });

        consultarBtn.setText("Consultar");
        consultarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarBtnActionPerformed(evt);
            }
        });

        actualizarBtn.setText("Actualizar");
        actualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        mostrarTodosBtn.setText("Mostrar todos");
        mostrarTodosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarTodosBtnActionPerformed(evt);
            }
        });

        tablaReglas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "llave", "Consecuente", "Antecedentes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaReglas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaReglas);
        if (tablaReglas.getColumnModel().getColumnCount() > 0) {
            tablaReglas.getColumnModel().getColumn(0).setMinWidth(50);
            tablaReglas.getColumnModel().getColumn(0).setPreferredWidth(50);
            tablaReglas.getColumnModel().getColumn(0).setMaxWidth(50);
            tablaReglas.getColumnModel().getColumn(1).setMinWidth(150);
            tablaReglas.getColumnModel().getColumn(1).setPreferredWidth(150);
            tablaReglas.getColumnModel().getColumn(1).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ingresarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(consultarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(actualizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mostrarTodosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(92, 111, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresarBtn)
                    .addComponent(consultarBtn)
                    .addComponent(actualizarBtn)
                    .addComponent(eliminarBtn)
                    .addComponent(mostrarTodosBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Módulo de actualización", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inferenciaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inferenciaBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<String> tem = new ArrayList<>();
        /*tem.add("p");
        tem.add("q");
        tem.add("k");
        tem.add("m");*/
        //AÑADIR LOS SINTOMAS

        
        for (int i = 0; i < antTemp.size(); i++) {
            tem.add(antTemp.get(i));
        }
        
        ArrayList<String> res = motor.encadenaAdelante(tem);
        resLabel.setText("Submetas alcanzadas: "+Arrays.toString(res.toArray()));
        
    }//GEN-LAST:event_inferenciaBtnActionPerformed

    private void ingresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBtnActionPerformed
        // TODO add your handling code here:
        Registro r = ingresarDatos();
        if(r==null){
            System.out.println("error: No se completo el registro");
        }else if(r.Antecedentes.isEmpty()||r.Consecuente==null){
            System.out.println("antecedentes o concecuente nulos");
        }else{
            archivos.insertar(r);
        }
        mostrarTodos();
    }//GEN-LAST:event_ingresarBtnActionPerformed

    private void consultarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarBtnActionPerformed
        // TODO add your handling code here:
        try{
            System.out.println();
            int llave = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la llave del registro que desea obtener"));
            Registro r = archivos.consultar(llave);
            if(r!=null){
                ArrayList<Registro>temp = new ArrayList<Registro>();
                temp.add(r);
                mostrarRegistros(temp);
            }else{
                JOptionPane.showMessageDialog(rootPane, "No existe registro con esa llave");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "No se pudo completar la operación");
        }
    }//GEN-LAST:event_consultarBtnActionPerformed

    private void actualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBtnActionPerformed
        // TODO add your handling code here:
        try{
            int llave =  Integer.parseInt(JOptionPane.showInputDialog("Ingrese la llave del registro que desea actualizar"));
            Registro r = archivos.consultar(llave);
            if(r!=null){
                JOptionPane.showMessageDialog(rootPane, "En la pantalla principal se muestra la información actual del registro, a continuación se le pedirá el nuevo registro");
                ArrayList<Registro>temp = new ArrayList<Registro>();
                temp.add(r);
                mostrarRegistros(temp);
                Registro nuevo = ingresarDatos();
                archivos.actualizar(llave, nuevo);
                mostrarTodos();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No existe registro con esa llave");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "No se pudo completar la operación");
        }
    }//GEN-LAST:event_actualizarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        // TODO add your handling code here:
        try{
            System.out.println();
            int llave = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la llave del registro que desea eliminar"));
            archivos.eliminar(llave);
            mostrarTodos();
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "No se pudo completar la operación");
        }
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void mostrarTodosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarTodosBtnActionPerformed
        // TODO add your handling code here:
        mostrarTodos();
    }//GEN-LAST:event_mostrarTodosBtnActionPerformed

    private void nuevosAntBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevosAntBtnActionPerformed
        // TODO add your handling code here:
        String antecedente = "";
        boolean continuar = true;
        do {
            antecedente = JOptionPane.showInputDialog("Ingresa el nuevo antecedente, pulsa enter para terminar");
            if(antecedente!=null){
                if(!antecedente.isEmpty())
                    antTemp.add(antecedente.replace(" ", ""));
                else
                    continuar = false;
            }
            else
                continuar = false;
            
        } while (continuar);
        String t ="";
        for (int i = 0; i < antTemp.size(); i++) {
            t+=antTemp.get(i)+"\n";
        }
        antecedentesArea.setText(t);
        
    }//GEN-LAST:event_nuevosAntBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        antTemp.clear();
        antecedentesArea.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarBtn;
    private javax.swing.JTextArea antecedentesArea;
    private javax.swing.JButton consultarBtn;
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JButton inferenciaBtn;
    private javax.swing.JButton ingresarBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton mostrarTodosBtn;
    private javax.swing.JButton nuevosAntBtn;
    private javax.swing.JLabel resLabel;
    private javax.swing.JTable tablaReglas;
    // End of variables declaration//GEN-END:variables
}
